From 5b38408d515ad76b31e096204e69f77880b41f6b Mon Sep 17 00:00:00 2001
From: Uri Lublin <uril@redhat.com>
Date: Thu, 28 Nov 2019 14:51:00 +0200
Subject: [spice-streaming-agent patch 101/101] gst-plugin: remove H264 and H265 (downstream)

Signed-off-by: Uri Lublin <uril@redhat.com>
---
 src/gst-plugin.cpp | 14 +-------------
 1 file changed, 1 insertion(+), 13 deletions(-)

diff --git a/src/gst-plugin.cpp b/src/gst-plugin.cpp
index b270e54..8841b88 100644
--- a/src/gst-plugin.cpp
+++ b/src/gst-plugin.cpp
@@ -118,11 +118,6 @@ GstElement *GstreamerFrameCapture::get_encoder_plugin(const GstreamerEncoderSett
     GstElementFactory *factory = nullptr;
 
     switch (settings.codec) {
-    case SPICE_VIDEO_CODEC_TYPE_H264:
-        sink_caps.reset(gst_caps_new_simple("video/x-h264",
-                                            "stream-format", G_TYPE_STRING, "byte-stream",
-                                            nullptr));
-        break;
     case SPICE_VIDEO_CODEC_TYPE_MJPEG:
         sink_caps.reset(gst_caps_new_empty_simple("image/jpeg"));
         break;
@@ -132,9 +127,6 @@ GstElement *GstreamerFrameCapture::get_encoder_plugin(const GstreamerEncoderSett
     case SPICE_VIDEO_CODEC_TYPE_VP9:
         sink_caps.reset(gst_caps_new_empty_simple("video/x-vp9"));
         break;
-    case SPICE_VIDEO_CODEC_TYPE_H265:
-        sink_caps.reset(gst_caps_new_empty_simple("video/x-h265"));
-        break;
     default : /* Should not happen - just to avoid compiler's complaint */
         throw std::logic_error("Unknown codec");
     }
@@ -433,16 +425,12 @@ void GstreamerPlugin::ParseOptions(const ConfigureOption *options)
                 throw std::runtime_error("Invalid value '" + value + "' for option 'framerate'.");
             }
         } else if (name == "gst.codec") {
-            if (value == "h264") {
-                settings.codec = SPICE_VIDEO_CODEC_TYPE_H264;
-            } else if (value == "vp9") {
+            if (value == "vp9") {
                 settings.codec = SPICE_VIDEO_CODEC_TYPE_VP9;
             } else if (value == "vp8") {
                 settings.codec = SPICE_VIDEO_CODEC_TYPE_VP8;
             } else if (value == "mjpeg") {
                 settings.codec = SPICE_VIDEO_CODEC_TYPE_MJPEG;
-            } else if (value == "h265") {
-                settings.codec = SPICE_VIDEO_CODEC_TYPE_H265;
             } else {
                 throw std::runtime_error("Invalid value '" + value + "' for option 'gst.codec'.");
             }
-- 
2.23.0

